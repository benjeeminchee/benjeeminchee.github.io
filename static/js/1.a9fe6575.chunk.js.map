{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","inverse","a","bool","color","string","block","Object","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","classes","createElement","ref","defaultProps","__webpack_exports__","CardBody","freeGlobal","freeSelf","self","root","Function","module","exports","isArray","Array","baseIsNative","getValue","key","value","undefined","process","d","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","values","destroy","render","_props3","id","onClick","Component","isRequired","number","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","clear","entry","get","has","eq","array","nativeCreate","getNative","isKeyable","__data__","isSymbol","INFINITY","result","webpackPolyfill","deprecate","paths","children","defineProperty","l","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep"],"mappings":"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","file":"static/js/1.a9fe6575.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;"],"sourceRoot":""}